apiVersion: v1
kind: Namespace
metadata:
  name: ${namespace}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  finalizers:
  - actions.github.com/cleanup-protection
  labels:
    actions.github.com/scale-set-name: ${runner_name}
    actions.github.com/scale-set-namespace: ${namespace}
    app.kubernetes.io/instance: ${runner_name}
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ${runner_name}
    app.kubernetes.io/part-of: gha-rs
    app.kubernetes.io/version: 0.13.0
    helm.sh/chart: gha-rs-0.13.0
    runners.opzkit.io/version: ${version}
  name: ${runner-name}-gha-rs-no-permission
  namespace: ${namespace}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  finalizers:
  - actions.github.com/cleanup-protection
  labels:
    actions.github.com/scale-set-name: ${runner_name}
    actions.github.com/scale-set-namespace: ${namespace}
    app.kubernetes.io/component: manager-role
    app.kubernetes.io/instance: ${runner_name}
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ${runner_name}
    app.kubernetes.io/part-of: gha-rs
    app.kubernetes.io/version: 0.13.0
    helm.sh/chart: gha-rs-0.13.0
    runners.opzkit.io/version: ${version}
  name: ${runner_name}-gha-rs-manager
  namespace: ${namespace}
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
- apiGroups:
  - ""
  resources:
  - pods/status
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - create
  - delete
  - get
  - patch
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  verbs:
  - create
  - delete
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  finalizers:
  - actions.github.com/cleanup-protection
  labels:
    actions.github.com/scale-set-name: ${runner_name}
    actions.github.com/scale-set-namespace: ${namespace}
    app.kubernetes.io/component: manager-role-binding
    app.kubernetes.io/instance: ${runner_name}
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ${runner_name}
    app.kubernetes.io/part-of: gha-rs
    app.kubernetes.io/version: 0.13.0
    helm.sh/chart: gha-rs-0.13.0
    runners.opzkit.io/version: ${version}
  name: ${runner_name}-gha-rs-manager
  namespace: ${namespace}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ${runner_name}-gha-rs-manager
subjects:
- kind: ServiceAccount
  name: arc-gha-rs-controller
  namespace: arc-systems
---
apiVersion: actions.github.com/v1alpha1
kind: AutoscalingRunnerSet
metadata:
  annotations:
    actions.github.com/cleanup-manager-role-binding: ${runner_name}-gha-rs-manager
    actions.github.com/cleanup-manager-role-name: ${runner_name}-gha-rs-manager
    actions.github.com/cleanup-no-permission-service-account-name: ${runner-name}-gha-rs-no-permission
    actions.github.com/values-hash: 2493a1a67519ba1f4bed5b3d2863c29708e5cfcdffac344eef4a271bf416943
  labels:
    actions.github.com/scale-set-name: ${runner_name}
    actions.github.com/scale-set-namespace: ${namespace}
    app.kubernetes.io/component: autoscaling-runner-set
    app.kubernetes.io/instance: ${runner_name}
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ${runner_name}
    app.kubernetes.io/part-of: gha-rs
    app.kubernetes.io/version: 0.13.0
    helm.sh/chart: gha-rs-0.13.0
    runners.opzkit.io/version: ${version}
  name: ${runner-name}
  namespace: ${namespace}
spec:
  githubConfigSecret: ${github_config_secret}
  githubConfigUrl: ${github_config_url}
  listenerTemplate:
    spec:
      containers:
      - name: listener
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
  runnerGroup: ${runner_group}
  runnerScaleSetName: ${runner_name}
  template:
    spec:
      containers:
      - env:
        - name: DOCKER_HOST
          value: unix:///var/run/docker.sock
        - name: RUNNER_WAIT_FOR_DOCKER_IN_SECONDS
          value: "120"
        name: runner
        volumeMounts:
        - mountPath: /home/runner/_work
          name: work
        - mountPath: /var/run
          name: dind-sock
      initContainers:
      - args:
        - -r
        - /home/runner/externals/.
        - /home/runner/tmpDir/
        command:
        - cp
        image: null
        name: init-dind-externals
        volumeMounts:
        - mountPath: /home/runner/tmpDir
          name: dind-externals
      - args:
        - dockerd
        - --host=unix:///var/run/docker.sock
        - --group=$(DOCKER_GROUP_GID)
        env:
        - name: DOCKER_GROUP_GID
          value: "123"
        image: docker:dind
        name: dind
        restartPolicy: Always
        securityContext:
          privileged: true
        startupProbe:
          exec:
            command:
            - docker
            - info
          failureThreshold: 24
          initialDelaySeconds: 0
          periodSeconds: 5
        volumeMounts:
        - mountPath: /home/runner/_work
          name: work
        - mountPath: /var/run
          name: dind-sock
        - mountPath: /home/runner/externals
          name: dind-externals
      restartPolicy: Never
      serviceAccountName: ${runner-name}-gha-rs-no-permission
      volumes:
      - emptyDir: {}
        name: dind-sock
      - emptyDir: {}
        name: dind-externals
      - emptyDir: {}
        name: work
